(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{213:function(t,s,e){"use strict";e.r(s);var r=e(0),a=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),s("p",[t._v("如果缓存过期了，我们就可以使用协商缓存来解决问题。协商缓存需要请求，如果缓存有效会返回 304。")]),t._v(" "),s("p",[t._v("协商缓存需要客户端和服务端共同实现，和强缓存一样，也有两种实现方式。")]),t._v(" "),s("h5",{attrs:{id:"last-modified-和-if-modified-since"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#last-modified-和-if-modified-since"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://yuchengkai.cn/docs/frontend/performance.html#last-modified-%E5%92%8C-if-modified-since",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1),t._v("Last-Modified 和 If-Modified-Since")]),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),s("h5",{attrs:{id:"etag-和-if-none-match"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#etag-和-if-none-match"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://yuchengkai.cn/docs/frontend/performance.html#etag-%E5%92%8C-if-none-match",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1),t._v("ETag 和 If-None-Match")]),t._v(" "),t._m(18),t._v(" "),t._m(19),t._v(" "),t._m(20),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),t._m(26),t._v(" "),t._m(27),t._v(" "),t._m(28),t._v(" "),s("p",[t._v("可视化分析工具，比Webapck Analyse更直观。使用也很简单：")]),t._v(" "),t._m(29),t._v(" "),t._m(30),t._v(" "),t._m(31),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("跨网站指令码")]),t._v("（英语：Cross-site scripting，通常简称为：XSS）是一种网站应用程式的安全漏洞攻击，是"),s("a",{attrs:{href:"https://www.wikiwand.com/zh-hans/%E4%BB%A3%E7%A2%BC%E6%B3%A8%E5%85%A5",target:"_blank",rel:"noopener noreferrer"}},[t._v("代码注入"),s("OutboundLink")],1),t._v("的一种。它允许恶意使用者将程式码注入到网页上，其他使用者在观看网页时就会受到影响。这类攻击通常包含了 HTML 以及使用者端脚本语言。")])]),t._v(" "),t._m(32),t._v(" "),t._m(33),t._v(" "),s("p",[t._v("内容安全策略 ("),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/CSP",target:"_blank",rel:"noopener noreferrer"}},[t._v("CSP"),s("OutboundLink")],1),t._v(") 是一个额外的安全层，用于检测并削弱某些特定类型的攻击，包括跨站脚本 ("),s("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Glossary/XSS",target:"_blank",rel:"noopener noreferrer"}},[t._v("XSS"),s("OutboundLink")],1),t._v(") 和数据注入攻击等。无论是数据盗取、网站内容污染还是散发恶意软件，这些攻击都是主要的手段。")]),t._v(" "),t._m(34),t._v(" "),s("p",[s("strong",[t._v("跨站请求伪造")]),t._v("（英语：Cross-site request forgery），也被称为 "),s("strong",[t._v("one-click attack")]),t._v(" 或者 "),s("strong",[t._v("session riding")]),t._v("，通常缩写为 "),s("strong",[t._v("CSRF")]),t._v(" 或者 "),s("strong",[t._v("XSRF")]),t._v("， 是一种挟制用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法。["),s("a",{attrs:{href:"https://www.wikiwand.com/zh/%E8%B7%A8%E7%AB%99%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0#citenoteRistic1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1]"),s("OutboundLink")],1),t._v(" 跟"),s("a",{attrs:{href:"https://www.wikiwand.com/zh/%E8%B7%A8%E7%B6%B2%E7%AB%99%E6%8C%87%E4%BB%A4%E7%A2%BC",target:"_blank",rel:"noopener noreferrer"}},[t._v("跨網站指令碼"),s("OutboundLink")],1),t._v("（XSS）相比，"),s("strong",[t._v("XSS")]),t._v(" 利用的是用户对指定网站的信任，CSRF 利用的是网站对用户网页浏览器的信任。")]),t._v(" "),t._m(35),t._v(" "),s("h4",{attrs:{id:"samesite"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#samesite"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://yuchengkai.cn/docs/frontend/safety.html#samesite",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1),t._v("SameSite")]),t._v(" "),t._m(36),t._v(" "),s("h4",{attrs:{id:"验证-referer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#验证-referer"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://yuchengkai.cn/docs/frontend/safety.html#%E9%AA%8C%E8%AF%81-referer",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1),t._v("验证 Referer")]),t._v(" "),s("p",[t._v("对于需要防范 CSRF 的请求，我们可以通过验证 Referer 来判断该请求是否为第三方网站发起的。")]),t._v(" "),s("h4",{attrs:{id:"token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#token"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://yuchengkai.cn/docs/frontend/safety.html#token",target:"_blank",rel:"noopener noreferrer"}},[t._v("#"),s("OutboundLink")],1),t._v("Token")]),t._v(" "),s("p",[t._v("服务器下发一个随机 Token（算法不能复杂），每次发起请求时将 Token 携带上，服务器验证 Token 是否有效。")]),t._v(" "),t._m(37),t._v(" "),s("p",[t._v("服务端生成,存储于服务端的内存中,长时间不使用会过期,服务端会通过session判断请求是否来自同一个客户端")]),t._v(" "),t._m(38),t._v(" "),s("p",[t._v("一般也由服务端生成,存储在客户端,每次请求都会自动附上这个值")]),t._v(" "),t._m(39),t._v(" "),t._m(40),t._v(" "),s("p",[t._v("服务端生成,服务端可以不做存储,也可以做存储")]),t._v(" "),t._m(41),t._v(" "),s("p",[t._v("在 token中加入用户身份识别信息,过期时间,时间戳等等内容,然后进行过加密传输给客户端,\n需要身份校验的接口,服务端就判断请求头是是否附带有token,如果有取出来解密然后执行后续操作")]),t._v(" "),t._m(42),t._v(" "),s("p",[t._v("生成一段不重复的加密字符串token作为key,然后存放在服务端(通常是用redis,服务端重启也不会丢失用户的登录状态)使用key-value形式,value是用户信息,然后将token(key)发给客户端")]),t._v(" "),t._m(43),t._v(" "),t._m(44),t._v(" "),s("p",[t._v("目前来看，同源策略会让三种行为受限：")]),t._v(" "),t._m(45),t._v(" "),t._m(46),t._v(" "),s("p",[t._v("如果你能让其他域跨域访问你的网站，甚至是操作你的DOM 是非常不安全的，所以为了不让我们自己在网站里面的内容随便被访问，这个策略保证我们只能访问同一站点的资源。")]),t._v(" "),t._m(47),t._v(" "),s("p",[t._v("HTTP 响应添加一些响应字段 Access-Control-* 来表明是否允许跨域请求，根据这些 CORS 响应字段，浏览器可以允许一些被同源策略限制的跨源响应。")]),t._v(" "),t._m(48),t._v(" "),t._m(49),t._v(" "),t._m(50),t._v(" "),t._m(51),t._v(" "),t._m(52),t._v(" "),s("p",[t._v("CORS 有两种类型的请求：简单请求和 预检请求。")]),t._v(" "),t._m(53),t._v(" "),s("p",[t._v("（1) 请求方法是以下三种方法之一：")]),t._v(" "),t._m(54),t._v(" "),s("p",[t._v("（2）HTTP的头信息不超出以下几种字段：")]),t._v(" "),t._m(55),t._v(" "),t._m(56),t._v(" "),t._m(57),t._v(" "),t._m(58),t._v(" "),s("p",[t._v("如果要在跨域请求中包含 cookie 和其他授权信息，我们需要做以下操作：")]),t._v(" "),t._m(59),t._v(" "),t._m(60),t._m(61),t._v(" "),t._m(62),t._v(" "),s("p",[t._v("WebScoket 也是基于TCP连接，默认80端口，如果是运行在TLS之上就是 443端口。")]),t._v(" "),t._m(63),t._v(" "),t._m(64),t._v(" "),t._m(65),t._v(" "),t._m(66),t._v(" "),t._m(67),t._v(" "),t._m(68),t._v(" "),t._m(69),t._v(" "),t._m(70),t._v(" "),t._m(71),t._v(" "),t._m(72)])}),[function(){var t=this._self._c;return t("h1",{attrs:{id:"浏览器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器"}},[this._v("#")]),this._v(" 浏览器")])},function(){var t=this._self._c;return t("h2",{attrs:{id:"url-输入到回车发生了什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#url-输入到回车发生了什么"}},[this._v("#")]),this._v(" URL 输入到回车发生了什么")])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("URL解析")]),t._v(" "),s("li",[t._v("DNS解析")]),t._v(" "),s("li",[t._v("TCP连接")]),t._v(" "),s("li",[t._v("处理请求")]),t._v(" "),s("li",[t._v("接受响应")]),t._v(" "),s("li",[t._v("渲染页面")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"gpu渲染页面"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gpu渲染页面"}},[this._v("#")]),this._v(" GPU渲染页面")])},function(){var t=this._self._c;return t("ul",[t("li",[t("strong",[this._v("当改变一个元素的尺寸位置属性时，会重新布局 绘制 以及后面所有的流程，这个称之为重排，")])]),this._v(" "),t("li",[t("strong",[this._v("当改变颜色属性，不会重排 但还是会触发样式计算和绘制，这个就是重绘")])])])},function(){var t=this._self._c;return t("p",[t("strong",[this._v("页面以每秒60帧刷新率（16ms）才不会卡顿，所以如果页面绘制和布局完成还有剩余时间，js就拿到主线程的使用权，如果js执行时间过长，就会导致下一帧js没有归还主线程给页面重绘，导致下一帧动画没有按时渲染，就会产生卡顿")])])},function(){var t=this._self._c;return t("blockquote",[t("p",[this._v("可以通过 requesetAnimationFrame() API 来优化 告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数，该回调函数会在浏览器下一次重绘之前执行")])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"性能"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#性能"}},[this._v("#")]),this._v(" 性能")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"网络相关"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#网络相关"}},[this._v("#")]),this._v(" 网络相关")])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("DNS域解析")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"强缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[this._v("#")]),this._v(" 强缓存")])},function(){var t=this._self._c;return t("p",[this._v("实现强缓存可以通过两种响应头实现："),t("code",[this._v("Expires")]),this._v(" 和 "),t("code",[this._v("Cache-Control")]),this._v(" 。强缓存表示在缓存期间不需要请求，"),t("code",[this._v("state code")]),this._v(" 为 200。")])},function(){var t=this._self._c;return t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[this._v("Expires: Wed, "),t("span",{pre:!0,attrs:{class:"token number"}},[this._v("22")]),this._v(" Oct "),t("span",{pre:!0,attrs:{class:"token number"}},[this._v("2018")]),this._v(" 08:41:00 GMT\nCache-control: max-age"),t("span",{pre:!0,attrs:{class:"token operator"}},[this._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[this._v("30")]),this._v("\n")])])])},function(){var t=this._self._c;return t("p",[t("code",[this._v("Expires")]),this._v(" 是 HTTP / 1.0 的产物，表示资源会在 "),t("code",[this._v("Wed, 22 Oct 2018 08:41:00 GMT")]),this._v(" 后过期，需要再次请求。并且 "),t("code",[this._v("Expires")]),this._v(" 受限于本地时间，如果修改了本地时间，可能会造成缓存失效。")])},function(){var t=this._self._c;return t("p",[t("code",[this._v("Cache-Control")]),this._v(" 出现于 HTTP / 1.1，优先级高于 "),t("code",[this._v("Expires")]),this._v(" 。该属性表示资源会在 30 秒后过期，需要再次请求。")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"协商缓存"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[this._v("#")]),this._v(" 协商缓存")])},function(){var t=this._self._c;return t("p",[t("code",[this._v("Last-Modified")]),this._v(" 表示本地文件最后修改日期，"),t("code",[this._v("If-Modified-Since")]),this._v(" 会将 "),t("code",[this._v("Last-Modified")]),this._v(" 的值发送给服务器，询问服务器在该日期后资源是否有更新，有更新的话就会将新的资源发送回来。")])},function(){var t=this._self._c;return t("p",[this._v("但是如果在本地打开缓存文件，就会造成 "),t("code",[this._v("Last-Modified")]),this._v(" 被修改，所以在 HTTP / 1.1 出现了 "),t("code",[this._v("ETag")]),this._v(" 。")])},function(){var t=this,s=t._self._c;return s("p",[s("code",[t._v("ETag")]),t._v(" 类似于文件指纹，"),s("code",[t._v("If-None-Match")]),t._v(" 会将当前 "),s("code",[t._v("ETag")]),t._v(" 发送给服务器，询问该资源 "),s("code",[t._v("ETag")]),t._v(" 是否变动，有变动的话就将新的资源发送回来。并且 "),s("code",[t._v("ETag")]),t._v(" 优先级比 "),s("code",[t._v("Last-Modified")]),t._v(" 高。")])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("HTTP / 2 多路复用，多个请求使用同一个TCP连接，极大加快了网页的加载速度")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"减少请求数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#减少请求数"}},[this._v("#")]),this._v(" 减少请求数")])},function(){var t=this._self._c;return t("ul",[t("li",[t("p",[this._v("JavaScript CSS 打包 压缩")])]),this._v(" "),t("li",[t("p",[this._v("JavaScript控制图片 图片本身")])]),this._v(" "),t("li",[t("p",[this._v("尽量使用 SVG 替代图片")])])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"文件优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件优化"}},[this._v("#")]),this._v(" 文件优化")])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("减少图片的数量")]),t._v(" "),s("li",[t._v("小图片使用 base64")]),t._v(" "),s("li",[t._v("能够显示 WebP 格式的浏览器尽量使用 WebP 格式。因为 WebP 格式具有更好的图像数据压缩算法，能带来更小的图片体积，而且拥有肉眼识别无差异的图像质量，缺点就是兼容性并不好")]),t._v(" "),s("li",[t._v("小图使用 PNG，其实对于大部分图标这类图片，完全可以使用 SVG 代替")]),t._v(" "),s("li",[t._v("照片使用 JPEG")])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"webpack"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webpack"}},[this._v("#")]),this._v(" Webpack")])},function(){var t=this._self._c;return t("h4",{attrs:{id:"优化输出-压缩文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优化输出-压缩文件"}},[this._v("#")]),this._v(" 优化输出 压缩文件")])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[s("p",[t._v("production 模式会自动开启代码压缩模式")])]),t._v(" "),s("li",[s("p",[t._v("压缩 JS  去掉无效js、日志、缩短变量名、压缩CSS")])]),t._v(" "),s("li",[s("p",[t._v("开启 Tree shaking 移除没有用的代码，ES6 依赖 import export 模块化语法。"),s("strong",[t._v("它正常工作的前提是代码必须采用ES6的模块化语法")]),t._v(" 因为ES6模块化语法是静态的。")])]),t._v(" "),s("li",[s("p",[t._v("优化图片")])]),t._v(" "),s("li",[s("p",[t._v("按照路由拆分代码 实现按需加载")])]),t._v(" "),s("li",[s("p",[t._v("给打包出来的文件名添加哈希，实现浏览器缓存文件")])])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"分析工具"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#分析工具"}},[this._v("#")]),this._v(" 分析工具")])},function(){var t=this._self._c;return t("p",[t("strong",[this._v("webpack-bundle-analyzer")])])},function(){var t=this._self._c;return t("ol",[t("li",[this._v("npm  i -g webpack-bundle-analyzer安装到全局")]),this._v(" "),t("li",[this._v("按照上面方法生成stats.json文件")]),this._v(" "),t("li",[this._v("在项目根目录执行"),t("code",[this._v("webpack-bundle-analyzer")]),this._v(" ，浏览器会自动打开结果分析页面。")])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"安全"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安全"}},[this._v("#")]),this._v(" 安全")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"xss"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#xss"}},[this._v("#")]),this._v(" XSS")])},function(){var t=this._self._c;return t("p",[this._v("XSS 通过修改 HTML 节点或者执行 JS 代码来攻击网站。"),t("strong",[this._v("把常用的符号进行转义，最普遍的做法是转义输入输出的内容，对于引号，尖括号，斜杠进行转义")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"csp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csp"}},[this._v("#")]),this._v(" CSP")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"csrf"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#csrf"}},[this._v("#")]),this._v(" CSRF")])},function(){var t=this._self._c;return t("ol",[t("li",[this._v("Get 请求不对数据进行修改")]),this._v(" "),t("li",[this._v("不让第三方网站访问到用户 Cookie")]),this._v(" "),t("li",[this._v("阻止第三方网站请求接口")]),this._v(" "),t("li",[this._v("请求时附带验证信息，比如验证码或者 token")])])},function(){var t=this._self._c;return t("p",[this._v("可以对 Cookie 设置 "),t("code",[this._v("SameSite")]),this._v(" 属性。该属性设置 Cookie 不随着跨域请求发送，该属性可以很大程度减少 CSRF 的攻击，但是该属性目前并不是所有浏览器都兼容。")])},function(){var t=this._self._c;return t("h2",{attrs:{id:"session"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#session"}},[this._v("#")]),this._v(" session")])},function(){var t=this._self._c;return t("h2",{attrs:{id:"cookie"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cookie"}},[this._v("#")]),this._v(" cookie")])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("请求同域下的静态资源也会附上,会损耗资源")])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"token-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#token-2"}},[this._v("#")]),this._v(" token")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"不做存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不做存储"}},[this._v("#")]),this._v(" 不做存储")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"做存储"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#做存储"}},[this._v("#")]),this._v(" 做存储")])},function(){var t=this._self._c;return t("h2",{attrs:{id:"跨域"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[this._v("#")]),this._v(" 跨域")])},function(){var t=this._self._c;return t("p",[t("strong",[this._v("默认情况下，使用 API 的 Web 应用程序只能从加载应用程序的同一个域请求 HTTP 资源。如果域名、协议、端口号有一个不一致 这个请求就是跨域请求。")])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("Cookie、LocalStorage 和 IndexDB 访问受限")]),this._v(" "),t("li",[this._v("无法操作跨域 DOM（常见于 iframe）")]),this._v(" "),t("li",[this._v("Javascript 发起的 XHR 和 Fetch 请求受限")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"为什么存在跨域？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#为什么存在跨域？"}},[this._v("#")]),this._v(" 为什么存在跨域？")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"服务端-cors"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务端-cors"}},[this._v("#")]),this._v(" 服务端 CORS")])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("一个字段是"),s("strong",[t._v("必加")]),t._v("的，那就是 "),s("code",[t._v("Access-Control-Allow-Origin")]),t._v("。这个头字段的值指定了哪些站点被允许跨域访问资源。")]),t._v(" "),s("li",[t._v("另一个常见的响应头字段是 "),s("code",[t._v("Access-Control-Allow-Methods")]),t._v("。其指明了跨域请求所允许使用的 HTTP 方法。")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"withcredentials"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#withcredentials"}},[this._v("#")]),this._v(" withCredentials")])},function(){var t=this._self._c;return t("p",[this._v("CORS请求默认不发送Cookie和HTTP认证信息。如果要把Cookie发到服务器，一方面要服务器同意，指定"),t("code",[this._v("Access-Control-Allow-Credentials")]),this._v("字段。开发者必须在AJAX请求中打开"),t("code",[this._v("withCredentials")]),this._v("属性。")])},function(){var t=this._self._c;return t("p",[this._v("如果要发送Cookie，"),t("code",[this._v("Access-Control-Allow-Origin")]),this._v("就不能设为星号，必须指定明确的、与请求网页一致的域名。同时，Cookie依然遵循同源政策，只有用服务器域名设置的Cookie才会上传，其他域名的Cookie并不会上传，且（跨源）原网页代码中的"),t("code",[this._v("document.cookie")]),this._v("也无法读取服务器域名下的Cookie。")])},function(){var t=this._self._c;return t("h3",{attrs:{id:"跨域预检请求"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#跨域预检请求"}},[this._v("#")]),this._v(" 跨域预检请求")])},function(){var t=this._self._c;return t("p",[t("strong",[this._v("如果满足下面两个大条件就是简单请求")])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("HEAD")]),this._v(" "),t("li",[this._v("GET")]),this._v(" "),t("li",[this._v("POST")])])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("Accept")]),t._v(" "),s("li",[t._v("Accept-Language")]),t._v(" "),s("li",[t._v("Content-Language")]),t._v(" "),s("li",[t._v("Last-Event-ID")]),t._v(" "),s("li",[t._v("Content-Type：只限于三个值"),s("code",[t._v("application/x-www-form-urlencoded")]),t._v("、"),s("code",[t._v("multipart/form-data")]),t._v("、"),s("code",[t._v("text/plain")])])])},function(){var t=this,s=t._self._c;return s("blockquote",[s("p",[s("strong",[t._v("非简单请求的 CORS请求，会在正式通信之前，增加一次 域检请求 请求方法是 OPTIONS")])]),t._v(" "),s("ul",[s("li",[t._v("浏览器会先询问服务器，当前网页所在的域名是否在服务器的许可名单中，以及可以使用哪些HTTP头信息字段，只有得到答复 才会正式开始请求。")]),t._v(" "),s("li",[t._v('服务器收到"预检"请求以后，检查了'),s("code",[t._v("Origin")]),t._v("、"),s("code",[t._v("Access-Control-Request-Method")]),t._v("和"),s("code",[t._v("Access-Control-Request-Headers")]),t._v("字段以后，确认允许跨源请求，就可以做出回应。")]),t._v(" "),s("li",[t._v("如果预检响应没有检验通过，CORS 会阻止跨域访问，实际的请求永远不会被发送。预检请求是一种很好的方式，可以防止我们访问或修改那些没有启用 CORS 策略的服务器上的资源。")])])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"认证"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#认证"}},[this._v("#")]),this._v(" 认证")])},function(){var t=this._self._c;return t("p",[this._v("一般而言，对于跨域 XHR 或 Fetch 请求，浏览器"),t("strong",[this._v("不会")]),this._v("发送身份凭证信息。尽管 CORS 默认情况下不发送身份凭证，但我们可以通过添加 "),t("code",[this._v("Access-Control-Allow-Credentials")]),this._v(" CORS 响应头来更改它。")])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("XHR 请求中将 "),s("code",[t._v("withCredentials")]),t._v(" 字段设置为 "),s("code",[t._v("true")])]),t._v(" "),s("li",[t._v("Fetch 请求中将 "),s("code",[t._v("credentials")]),t._v(" 设为 "),s("code",[t._v("include")])]),t._v(" "),s("li",[t._v("服务器把 "),s("code",[t._v("Access-Control-Allow-Credentials: true")]),t._v(" 添加到响应头中")])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// fetch 请求")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fetch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://api.mywebsite.com/users'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("credentials")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'include'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 浏览器 XHR 请求")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" xhr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("XMLHttpRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nxhr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("withCredentials "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务器添加认证字段")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("OK")]),t._v("\nAccess"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Control"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Allow"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Credentials"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n")])])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"webscoket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#webscoket"}},[this._v("#")]),this._v(" webscoket")])},function(){var t=this._self._c;return t("p",[this._v("早期为了网站长连接，传统模式使用的都是轮询来做。浏览器需要不断向服务器请求，而HTTP请求里面带的信息真正能被使用的只有一小部分，如果轮询请求会造成带宽资源的浪费。"),t("strong",[this._v("Comet虽然可以双向通信 但是还是要反复请求。")]),this._v(" HTML5 定义了新的协议 WebScoket协议，能更好的节省服务器资源和带宽。而且能够实时进行通信，"),t("strong",[this._v("Websocket 使⽤ ws 或 wss 的统⼀资源标志符（URI），其中 wss 表示使⽤了 TLS 的Websocket")])])},function(){var t=this._self._c;return t("p",[this._v("WebScoket是网络传输协议，在单个TCP连接上进行全双工通信，在应用层。标准化为 RFC 6455，后由 RFC 7936 补充规范。"),t("strong",[this._v("允许服务端主动想客户端推送数据，浏览器只要和服务器完成一次握手，就可以创建持久化的连接，进行双向数据传输。")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优点"}},[this._v("#")]),this._v(" 优点")])},function(){var t=this,s=t._self._c;return s("ul",[s("li",[t._v("较少的控制开销 连接创建之后，服务端和客户端之间交换数据时，用于协议控制的数据包头部相对较小")]),t._v(" "),s("li",[t._v("更强的实时性，协议是全双工，所以服务器可以随时主动给客户端下发数据。相对于HTTP请求需要等待客户端发起请求服务端才能响应")]),t._v(" "),s("li",[t._v("保持连接性")]),t._v(" "),s("li",[t._v("更好的二进制支持，轻松处理二进制内容")]),t._v(" "),s("li",[t._v("支持扩展 可以扩展协议，实现部分自定义的子协议")])])},function(){var t=this._self._c;return t("h2",{attrs:{id:"socket"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#socket"}},[this._v("#")]),this._v(" Socket")])},function(){var t=this._self._c;return t("p",[this._v("网络上两个程序通过一个双向的通信连接实现数据的交换，连接的一端称为一个 socket（套接字），因此建立网络通信连接至少要一对端口号，"),t("strong",[this._v("socket本质上是对 TCP/IP 协议栈的封装，提供了一个针对TCP或者UDP编程的接口，并不是另一种协议。")])])},function(){var t=this._self._c;return t("ul",[t("li",[this._v("它可以实现底层通信，几乎所有的应用层都是通过 socket进行通信的")]),this._v(" "),t("li",[this._v("对TCP/IP 协议进行封装，便于应用层协议调用，属于二者之间的中间抽象层")]),this._v(" "),t("li",[this._v("TCP /IP 协议中，UDP、TCP 两种协议都不同，不同参数的socket实现过程也不一样。")])])},function(){var t=this._self._c;return t("h3",{attrs:{id:"arraybuffer"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffer"}},[this._v("#")]),this._v(" ArrayBuffer")])},function(){var t=this._self._c;return t("p",[this._v("ArrayBuffer 对象表示固定长度的二进制数据缓冲区。ArrayBuffer不能直接操作，而是要"),t("strong",[this._v("通过类数组对象或者 DataView 对象来操作")]),this._v("，"),t("strong",[this._v("ArrayBuffer是一片内存，不能直接使用，需要装换可以使用的实际类型。这就是TypeArray的作用，")])])},function(){var t=this,s=t._self._c;return s("blockquote",[s("p",[s("strong",[t._v("const buffer = new ArrayBuffer(length); // length 创建的大小 字符是字节")])]),t._v(" "),s("p",[s("strong",[t._v("const typeArray = new UInt16Array(buffer)")])]),t._v(" "),s("p",[s("strong",[t._v("这里有两个几个注意的地方")])]),t._v(" "),s("ul",[s("li",[t._v("ArrayBuffer 的参数length指定的是字符大小，会根据这个参数在内存开辟多大的空间")]),t._v(" "),s("li",[t._v("TypeArray不同的类型 每个元素占用的字符数是不一样的，比如Int16Array 每个元素占两个字节，32占4个字节")]),t._v(" "),s("li",[t._v("typeArray的元素赋值，如果超过了这个字符数，超过的位会置零 如下代码")])])])},function(){var t=this,s=t._self._c;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" myArray "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ArrayBuffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Uint8Array")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myArray"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nbuffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("32")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 越界的值会直接切断")]),t._v("\nbuffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("549")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 549的二进制表示 100100101 一个元素占一个字节，那么第一个1会置零 就是 00100101 => 37")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 37")]),t._v("\n")])])])}],!1,null,null,null);s.default=a.exports}}]);